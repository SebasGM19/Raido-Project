/*
 * init_config.h
 *
 *  Created on: Feb 4, 2024
 *      Author: Sebastian G.M.
 */

#include <stdint.h>

#ifndef INIT_CONFIG_H_
#define INIT_CONFIG_H_

typedef enum{
	Low,
	High
}State_Control_t;

typedef enum{
	Success,
	PinNotAvailable,
	DelayTimeNotSupported,
	ClockNotSupported,
	OptionNotSupported,
	WrongParameter
}Status_code_t;

typedef enum{
	Disabled,
	Enabled
}Enabled_Disabled_t;

typedef enum{
	Pin_0,
	Pin_1,
	Pin_2,
	Pin_3,
	Pin_4,
	Pin_5,
	Pin_6,
	Pin_7,
	Pin_8,
	Pin_9,
	Pin_10,
	Pin_11,
	Pin_12,
	Pin_13,
	Pin_14,
	Pin_15
}Pin_number_t;

typedef enum{
	Input,
	Output,
	Alt_func_mode,
	Analog_mode
}PinMode_t;

typedef enum{
	Clean_one_bit =0x01,
	Clear_two_bits=0x03
}RegAuxClean_t;


//para outpur es +0x14 y input 0x10
typedef enum{

	Port_A = 0x40020000,
	Port_B = 0x40020400,
	Port_C = 0x40020800,
	Port_D = 0x40020C00,
//	Port_E = 0x40021000,
//	Port_H = 0x40021C00

}Set_Port_t;

typedef enum{
	Clk_PortA,
	Clk_PortB,
	Clk_PortC,
	Clk_PortD,
//	Clk_PortE,
//	Clk_PortH=7,
}Clock_enabled_t; //BUS AHB1 todos estos

typedef enum{
	TIM2_ADDRESS = 			0x40000000, //APB1 BUS
	TIM3_ADDRESS =			0x40000400,
	TIM4_ADDRESS =			0x40000800,
	TIM5_ADDRESS =			0x40000C00,
	RTC_BKP_REG_ADDRESS = 	0x40002800,
	WWDG_ADDRESS = 			0x40002C00,
	IWDG_ADDRESS = 			0x40003000,
	I2S2ext_ADDRESS =		0x40003400,
	SPI2_I2S2_ADDRESS =		0x40003800,
	SPI3_I2S3_ADDRESS = 	0x40003C00,
	I2S3ext_ADDRESS = 		0x40004000,
	USART2_ADDRESS = 		0x40004400,
	I2C1_ADDRESS = 			0x40005400,
	I2C2_ADDRESS = 			0x40005800,
	I2C3_ADDRESS = 			0x40005C00,
	PWR_ADDRESS = 			0x40007000, //APB1

	TIM1_ADDRESS = 			0x40010000, //APB2 BUS
	USART1_ADDRESS = 		0x40011000,
	USART6_ADDRESS = 		0x40011400,
	ADC1_ADDRESS = 			0x40011000,
	SDIO_ADDRESS = 			0x40012C00,
	SPI1_I2C1_ADDRESS =		0x40013000,
	SPI4_I2C4_ADDRESS = 	0x40013400,
	SYSCFG_ADDRESS= 		0x40013800,
	EXT1_ADDRESS =			0x40013C00,
	TIM9_ADDRESS = 			0x40014000,
	TIM10_ADDRESS = 		0x40014400,
	TIM11_ADDRESS = 		0x40014800,
	SPI5_I2S5_ADDRESS = 	0x40015000,

	CRC_ADDRESS = 			0x40023000, //AHB1 BUS
	RCC_ADDRESS =			0x40023800,
	FLASH_INT_REG_ADDRESS = 0x40023C00,
	DMA1_ADDRESS = 			0x40026000,
	DMA2_ADDRESS = 			0x40026400,

	USB_OTG_FS_ADDRESS = 	0x50000000 //BUS AHB2

}memoryMapAddress_t;

typedef enum{
	RCC_OFFSET_CR =0x00,
	RCC_OFFSET_PLLCFGR =0x04,
	RCC_OFFSET_CFGR =0x08,
	RCC_OFFSET_CIR = 0x0C,
	RCC_OFFSET_AHB1RSTR =0x10,
	RCC_OFFSET_AHB2RSTR =0x14,
	RCC_OFFSET_APB1RSTR = 0x20,
	RCC_OFFSET_APB2RSTR = 0x24,
	RCC_OFFSET_AHB1ENR =0x30,
	RCC_OFFSET_AHB2ENR =0x34,
	RCC_OFFSET_APB1ENR =0x40,
	RCC_OFFSET_APB2ENR =0x44,
	RCC_OFFSET_AHB1LPENR = 0x50,
	RCC_OFFSET_AHB2LPENR =0x54,
	RCC_OFFSET_APB1LPENR =0x60,
	RCC_OFFSET_APB2LPENR =0x64,
	RCC_OFFSET_BDCR = 0x70,
	RCC_OFFSET_CSR =0x74,
	RCC_OFFSET_SSCGR =0x80,
	RCC_OFFSET_PLLI2S = 0x84,
	RCC_OFFSET_DCKCFGR =0x8C

}RCC_offset_t;


typedef enum{

	GPIOx_MODER_OFFSET =0x00,
	GPIOx_OTYPER_OFFSET =0x04,
	GPIOx_OSPEEDR_OFFSET =0x08,
	GPIOx_PUPDR_OFFSET =0x0C,
	GPIOx_IDR_OFFSET =0x10,
	GPIOx_ODR_OFFSET =0x14,
	GPIOx_BSRR_OFFSET =0x18,
	GPIOx_LCKR_OFFSET =0x1C,
	GPIOx_AFRL_OFFSET =0x20,
	GPIOx_AFRH_OFFSET =0x24

}GPIO_register_offset_t;


typedef enum{
	No_pull_No_Down,
	Pull_Up,
	Pull_Down

}GPIO_UP_DOWN_STATE_t;

typedef enum{
	OFFSET_PORTS =0x00,
}peripherial_offset_t;

typedef enum{
	Op_PortB=0x40020400,
	Op_PortC=0x40020800
}Output_Byte_Option_t;


Status_code_t Delay(uint32_t Miliseconds);
State_Control_t GPIO_DigitalRead(Set_Port_t Port_define, Pin_number_t Pin_defined);
State_Control_t GPIO_DigitalWrite(Set_Port_t Port_define, Pin_number_t Pin_defined, State_Control_t State);
Status_code_t ClockEnable(Set_Port_t Port_define, Enabled_Disabled_t Intention);
Status_code_t SetPinMode(Set_Port_t Port_define, Pin_number_t Pin_defined, PinMode_t Mode);
Status_code_t GpioPullUpDownState(Set_Port_t Port_define, Pin_number_t Pin_defined, GPIO_UP_DOWN_STATE_t GPIO_State);
Status_code_t GPIO_SET_Output_Byte(Output_Byte_Option_t Configuration);
Status_code_t GPIO_Write_Byte(Output_Byte_Option_t Configuration, uint8_t secuence);

#endif /* INIT_CONFIG_H_ */
